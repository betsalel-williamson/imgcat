
DELIMITER $$
CREATE OR REPLACE FUNCTION Posts.SetVote(
	p_post_id INT UNSIGNED,
	p_user_id INT UNSIGNED,
	p_type TINYINT UNSIGNED
)
RETURNS INT SIGNED
NOT DETERMINISTIC
MODIFIES SQL DATA
SQL SECURITY DEFINER
BEGIN
	-- NOTE: We do a DELETE & RE-INSERT instead of a MERGE/UPSERT, because we can
	-- use the (autogenerated) id column for change tracking:
	-- SELECT DISTINCT post_id FROM Posts.Vote WHERE id > @lastcache
	-- TODO: Actually implement this. If we don't, then remove the id column?
	DELETE FROM Posts.Vote
	WHERE post_id = p_post_id
		AND user_id = p_user_id;

	INSERT INTO Posts.Vote(post_id, user_id, type)
	VALUES(p_post_id, p_user_id, p_type);

	-- Invalidate the cache & return the new vote count
	DELETE FROM Posts.VVCache WHERE id = p_post_id;
	RETURN Posts.GetVotes(p_post_id);
END
$$
DELIMITER ;